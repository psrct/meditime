<%-include("head")%>
<style>
    body {
        justify-content: center;
        align-items: center;
        background-color: #f4f4f4;
    }

    hr {
        border-top: 2px solid rgba(0, 0, 0, 0.323);
    }

    .calendar {
        width: 550px;
        height: 450px;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 10px;
    }
    .day, .weekday {
        padding: 10px;
        background: #ddd;
        border-radius: 5px;
    }
    .weekday {
        font-weight: bold;
        background: #bbb;
    }

    .day.today {
        background: #ff6347;
        color: white;
        font-weight: bold;
    }

    .day.queue {
        background: #2bb921;
    }

    .task-container {
        width: 600px;
        margin-left: 75px
    }

    .task {
        width: 400px;
        background: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        margin-bottom: 20px
    }

    .nodata {
        height: 65px;
    }
    
    #flex{
        display: flex;
    }
    @media (max-width: 1200px){
        #flex{
            display: grid;
            gap: 30px;
        }
        .task-container {
            width: 400px;
        }
    }
</style>
<body>
    <% if(user.usertype == "doctor"){ %>
        <%-include("sidebar-doctor")%>
    <% } else { %>
        <%-include("sidebar")%>
    <% } %>
    <%-include("main-content-top")%>
    <div class="container">
        <input id="date_input" type="date" onchange="changeDate()" class="form-control col-md-5"><br>
        <div id="flex">
            <div class="calendar">
                <div style="display:flex; align-items:center; justify-content:center;">
                    <button id="prev-month" class="nav-button" style="border:none; font-size:25px; position:flex; left:325px; margin-right:20px;"><</button>
                    <h2 id="month-year"></h2>
                    <button id="next-month" class="nav-button" style="border:none; font-size:25px; position:flex; left:790px; margin-left:20px;">></button>
                </div>
                <div class="grid" id="calendar-days">
                    <div class="weekday">Sun</div>
                    <div class="weekday">Mon</div>
                    <div class="weekday">Tue</div>
                    <div class="weekday">Wed</div>
                    <div class="weekday">Thu</div>
                    <div class="weekday">Fri</div>
                    <div class="weekday">Sat</div>
                </div>
            </div>
            <div class="task-container" id="task-container">
            </div>
        </div>
    </div>
    
    <%-include("main-content-bottom")%>
    <%-include("script-toggle-sidebar")%>

    <script>
        <%-include('scripts/DateFormat')%>
        document.getElementById("logo").removeAttribute("src");
        document.getElementById("logo").setAttribute("src", "../logo.png");

        function changeCustomDate(datestring) {
            window.location.href = `/schedule/${datestring}`;
        }

        function changeDate() {
            window.location.href = `/schedule/${document.getElementById("date_input").value}`;
        }

        document.getElementById("date_input").value = <%-JSON.stringify(search_date)%>;

        const today = new Date(<%-JSON.stringify(search_date)%>);
        
        const currentMonth = today.getMonth();
        const currentYear = today.getFullYear();
        const firstDateDay = new Date(currentYear, currentMonth, 1).getDay();
        const lastDate = new Date(currentYear, currentMonth + 1, 0).getDate();

        document.getElementById("prev-month").onclick = function() {
            changeCustomDate(DateToDateString(new Date(currentYear, currentMonth - 1, 1)));
        };
        document.getElementById("next-month").onclick = function() {
            changeCustomDate(DateToDateString(new Date(currentYear, currentMonth + 1, 1)));
        };

        document.getElementById("month-year").innerText = today.toLocaleString('default', { month: 'long', year: 'numeric' });
        
        let daysHTML = document.getElementById("calendar-days").innerHTML;
        
        for (let i = 0; i < firstDateDay; i++) {
            daysHTML += '<div></div>';
        }
        
        const month_tasks_data = <%-JSON.stringify(month_tasks_data)%>;

        for (let day = 1; day <= lastDate; day++) {
            const isToday = (day === today.getDate());
            daysHTML += `<div class="day ${isToday ? 'today' : (month_tasks_data.find(task => task.day === day) ? 'queue' : '')}" style="cursor:pointer;" onclick="changeCustomDate('${DateToDateString(new Date(currentYear, currentMonth, day))}')">${day}</div>`;
        }
        
        document.getElementById("calendar-days").innerHTML = daysHTML;


        <% if(user.usertype == "patient"){ %>
            const tasks_data = <%-JSON.stringify(tasks_data)%>;
        <% } %>
        
        const subtasks_data = <%-JSON.stringify(subtasks_data)%>;
        


        function createTaskBar(task) {
            // สำหรับผู้ป่วย
            const temTaskDiv = document.createElement("div");
            temTaskDiv.className = "task";
            temTaskDiv.id = `task-${task.task_id}`;

            const task_id = document.createElement("p");
            const start_datetime = document.createElement("p");
            const end_datetime = document.createElement("p");
            const is_paid = document.createElement("p");
            const is_completed = document.createElement("p");
            const subtaskServiceList = document.createElement("p");

            task_id.innerHTML = `รหัส : ${task.task_id}`;
            start_datetime.innerHTML = `วัน/เวลาที่เริ่ม : ${task.start_datetime}`;
            end_datetime.innerHTML = `วัน/เวลาที่เสร็จสิ้น : ${task.end_datetime}`;
            if(task.is_paid==="No"){
                is_paid.innerHTML = `การชำระเงิน : ❌`;
            }else{
                is_paid.innerHTML = `การชำระเงิน : ✅`;
            }
            if(task.is_completed==="No"){
                is_completed.innerHTML = `สถานะ : ❌`;
            }else{
                is_completed.innerHTML = `สถานะ : ✅`;
            }


            const allSubtasks = subtasks_data.filter(subtask => subtask.task_id == task.task_id);
            allSubtasks.forEach(subtask => {
                console.log(allSubtasks)
                subtaskServiceList.innerHTML += `${subtask.service_name} ${subtask.start_datetime} - ${subtask.end_datetime}<br>`;
            });

            temTaskDiv.appendChild(task_id);
            temTaskDiv.appendChild(start_datetime);
            temTaskDiv.appendChild(end_datetime);
            temTaskDiv.appendChild(is_paid);
            temTaskDiv.appendChild(is_completed);
            temTaskDiv.appendChild(document.createElement("hr"));
            temTaskDiv.appendChild(subtaskServiceList);

            return temTaskDiv;
        }

        function createSubtaskBar(subtask) {
            // สำหรับหมอ
            const temTaskDiv = document.createElement("div");
            temTaskDiv.className = "task";
            temTaskDiv.id = `task-${subtask.task_id}`;

            const task_id = document.createElement("p");
            const service_name = document.createElement("p");
            const patient_name = document.createElement("p");
            const start_datetime = document.createElement("p");
            const end_datetime = document.createElement("p");
            const room_name = document.createElement("p");

            task_id.innerHTML = `รหัส : ${subtask.task_id} ${subtask.task_id}`;
            service_name.innerHTML = `บริการ: ${subtask.service_name} (${subtask.service_id})`
            start_datetime.innerHTML = `วัน/เวลาที่เริ่ม : ${subtask.start_datetime}`;
            end_datetime.innerHTML = `วัน/เวลาที่เสร็จสิ้น : ${subtask.end_datetime}`;
            room_name.innerHTML = `ห้อง: ${room_name} หมายเลข ${room_id}`;
            patient_name.innerHTML `ผู้ป่วย: ${patient_name}`;

            temTaskDiv.appendChild(task_id);
            temTaskDiv.appendChild(room_name);
            temTaskDiv.appendChild(service_name);
            temTaskDiv.appendChild(patient_name);
            temTaskDiv.appendChild(document.createElement("hr"));
            temTaskDiv.appendChild(start_datetime);
            temTaskDiv.appendChild(end_datetime);

            return temTaskDiv;
        }

        function showNoData() {
            // หากไม่มีข้อมูลในวันดังกล่าว
            const temTaskDiv = document.createElement("div");
            temTaskDiv.className = "task nodata";
            temTaskDiv.id = `task-null`;
            
            const showNoDataText = document.createElement("p");

            showNoDataText.innerHTML = `ไม่มีรายการรักษาในวันนี้`;

            temTaskDiv.appendChild(showNoDataText);

            return temTaskDiv;
        }
        

        function showTasks() {
            const task_container = document.getElementById("task-container");

            <% if(user.usertype == "patient"){ %>
                if (tasks_data.length == 0) {
                    task_container.appendChild(showNoData());
                    return;
                }

                tasks_data.forEach(task => {
                    task_container.appendChild(createTaskBar(task));
                });
            <% } else if (user.usertype == "doctor") {%>
                if (subtasks_data.length == 0) {
                    task_container.appendChild(showNoData());
                    showNoData();
                    return;
                }

                subtasks_data.forEach(subtask => {
                    createSubtaskBar(subtask);
                });
            <% } %>
        }
        showTasks();
    </script>
</body>

</html>